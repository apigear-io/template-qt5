{% assign module_id = module.name|identifier|append:"_lib" %}
{% assign MODULE_ID = module.name|identifier|constant|append:"_LIB" %}
{% assign module_path = module.name|path %}
{% assign SOURCES = MODULE_ID | append: "_SOURCES" -%}

find_package(Qt5 REQUIRED COMPONENTS Core Qml WebSockets)
set(OUTPUT_PATH ${LIBRARY_PATH}/)

set ({{MODULE_ID}}_SOURCES
    factory.cpp
{%- for interface in module.interfaces %}
    {{interface.name|lower}}.cpp
    qml{{interface.name|lower}}.cpp
{%- endfor %}
)

# dynamic library
add_library({{module_id}} STATIC {{ "${" | append: SOURCES | append: "}"}})
target_link_libraries({{module_id}} PRIVATE Qt5::Core Qt5::Qml Qt5::WebSockets {{module.name|identifier}}_api)
target_compile_definitions({{module_id}} PRIVATE {{ MODULE_ID }}_LIBRARY)

# add test targets
{% for interface in module.interfaces %}
{% assign test_name = interface.name|lower %}

# test for {{interface.name}}
add_executable(test_{{module_id}}_{{test_name}}
    tst_{{test_name}}.cpp
)

target_link_libraries(test_{{module_id}}_{{test_name}} PRIVATE Qt5::Test {{module_id}})
target_compile_definitions(test_{{module_id}}_{{test_name}} PRIVATE {{ MODULE_ID }}_LIBRARY)
add_test(test_{{module_id}}_{{test_name}} test_{{module_id}}_{{test_name}})
{% endfor %}
