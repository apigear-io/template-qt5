{% comment %} // Copyright (c) ApiGear UG 2020 {% endcomment -%}
{{ module | licGPLcpp -}}
{% assign class = interface.name -%}
{% assign MODULE_ID = module.name|identifier|constant|append:"_LIB" %}
#pragma once

#include <QtCore>

#include "../api/api.h"

#if defined({{ MODULE_ID }}_LIBRARY)
#  define {{ MODULE_ID }}_EXPORT Q_DECL_EXPORT
#else
#  define {{ MODULE_ID }}_EXPORT Q_DECL_IMPORT
#endif

class {{ MODULE_ID }}_EXPORT {{class}} : public Abstract{{class}}
{
    Q_OBJECT
public:
    explicit {{class}}(QObject *parent = nullptr);
    virtual ~{{class}}() override;

{% for property in interface.properties %}
    {{property|qtReturn}} {{property.name}}() const override;
    void set{{property.name|capital}}({{property|qtParam}}) override;
{% endfor %}

{% for operation in interface.operations %}
    {{operation|qtReturn}} {{operation.name}}({{operation|qtParams}}) override;
{% endfor %}

private:
{% for property in interface.properties %}
    {{property|qtReturn}} m_{{property.name}};
{% endfor %}
};
