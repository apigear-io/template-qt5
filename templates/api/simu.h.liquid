#pragma once

#include <QtCore>
#include "api.h"


{%- for interface in module.interfaces %}
{% assign class = interface.name | prepend: "Simulation" %}

// ********************************************************************
// {{class}} simulation interface
// ********************************************************************


class {{class}} : public Abstract{{interface}}
{
    Q_OBJECT
public:
    explicit {{class}}(QObject *parent = nullptr);
    virtual ~{{class}}() override;

{% for property in interface.properties %}
    {{property|qtReturn}} {{property.name}}() const override;
    void set{{property.name|capital}}({{property|qtParam}}) override;
{% endfor %}

{% for operation in interface.operations %}
    {{operation|qtReturn}} {{operation.name}}({{operation|qtParams}}) override;
{% endfor %}

private:
{% for property in interface.properties %}
    {{property|qtReturn}} m_{{property.name}};
{% endfor %}
};
{% endfor %}

